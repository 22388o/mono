(()=>{var e={93150:function(e,n){var t,r,s;"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,r=[e],t=function(e){"use strict";if(!globalThis.chrome?.runtime?.id)throw new Error("This script should only be loaded in a browser extension.");if(void 0===globalThis.browser||Object.getPrototypeOf(globalThis.browser)!==Object.prototype){const n="The message port closed before a response was received.",t=e=>{const t={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(0===Object.keys(t).length)throw new Error("api-metadata.json has not been included in browser-polyfill");class r extends WeakMap{constructor(e,n=void 0){super(n),this.createItem=e}get(e){return this.has(e)||this.set(e,this.createItem(e)),super.get(e)}}const s=e=>e&&"object"==typeof e&&"function"==typeof e.then,i=(n,t)=>(...r)=>{e.runtime.lastError?n.reject(new Error(e.runtime.lastError.message)):t.singleCallbackArg||r.length<=1&&!1!==t.singleCallbackArg?n.resolve(r[0]):n.resolve(r)},o=e=>1==e?"argument":"arguments",a=(e,n)=>function(t,...r){if(r.length<n.minArgs)throw new Error(`Expected at least ${n.minArgs} ${o(n.minArgs)} for ${e}(), got ${r.length}`);if(r.length>n.maxArgs)throw new Error(`Expected at most ${n.maxArgs} ${o(n.maxArgs)} for ${e}(), got ${r.length}`);return new Promise(((s,o)=>{if(n.fallbackToNoCallback)try{t[e](...r,i({resolve:s,reject:o},n))}catch(i){console.warn(`${e} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,i),t[e](...r),n.fallbackToNoCallback=!1,n.noCallback=!0,s()}else n.noCallback?(t[e](...r),s()):t[e](...r,i({resolve:s,reject:o},n))}))},l=(e,n,t)=>new Proxy(n,{apply:(n,r,s)=>t.call(r,e,...s)});let c=Function.call.bind(Object.prototype.hasOwnProperty);const g=(e,n={},t={})=>{let r=Object.create(null),s={has:(n,t)=>t in e||t in r,get(s,i,o){if(i in r)return r[i];if(!(i in e))return;let m=e[i];if("function"==typeof m)if("function"==typeof n[i])m=l(e,e[i],n[i]);else if(c(t,i)){let n=a(i,t[i]);m=l(e,e[i],n)}else m=m.bind(e);else if("object"==typeof m&&null!==m&&(c(n,i)||c(t,i)))m=g(m,n[i],t[i]);else{if(!c(t,"*"))return Object.defineProperty(r,i,{configurable:!0,enumerable:!0,get:()=>e[i],set(n){e[i]=n}}),m;m=g(m,n[i],t["*"])}return r[i]=m,m},set:(n,t,s,i)=>(t in r?r[t]=s:e[t]=s,!0),defineProperty:(e,n,t)=>Reflect.defineProperty(r,n,t),deleteProperty:(e,n)=>Reflect.deleteProperty(r,n)},i=Object.create(e);return new Proxy(i,s)},m=e=>({addListener(n,t,...r){n.addListener(e.get(t),...r)},hasListener:(n,t)=>n.hasListener(e.get(t)),removeListener(n,t){n.removeListener(e.get(t))}}),d=new r((e=>"function"!=typeof e?e:function(n){const t=g(n,{},{getContent:{minArgs:0,maxArgs:0}});e(t)})),u=new r((e=>"function"!=typeof e?e:function(n,t,r){let i,o,a=!1,l=new Promise((e=>{i=function(n){a=!0,e(n)}}));try{o=e(n,t,i)}catch(e){o=Promise.reject(e)}const c=!0!==o&&s(o);if(!0!==o&&!c&&!a)return!1;const g=e=>{e.then((e=>{r(e)}),(e=>{let n;n=e&&(e instanceof Error||"string"==typeof e.message)?e.message:"An unexpected error occurred",r({__mozWebExtensionPolyfillReject__:!0,message:n})})).catch((e=>{console.error("Failed to send onMessage rejected reply",e)}))};return g(c?o:l),!0})),E=({reject:t,resolve:r},s)=>{e.runtime.lastError?e.runtime.lastError.message===n?r():t(new Error(e.runtime.lastError.message)):s&&s.__mozWebExtensionPolyfillReject__?t(new Error(s.message)):r(s)},p=(e,n,t,...r)=>{if(r.length<n.minArgs)throw new Error(`Expected at least ${n.minArgs} ${o(n.minArgs)} for ${e}(), got ${r.length}`);if(r.length>n.maxArgs)throw new Error(`Expected at most ${n.maxArgs} ${o(n.maxArgs)} for ${e}(), got ${r.length}`);return new Promise(((e,n)=>{const s=E.bind(null,{resolve:e,reject:n});r.push(s),t.sendMessage(...r)}))},h={devtools:{network:{onRequestFinished:m(d)}},runtime:{onMessage:m(u),onMessageExternal:m(u),sendMessage:p.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:p.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},A={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return t.privacy={network:{"*":A},services:{"*":A},websites:{"*":A}},g(e,h,t)};e.exports=t(chrome)}else e.exports=globalThis.browser},void 0===(s="function"==typeof t?t.apply(n,r):t)||(e.exports=s)}},n={};function t(r){var s=n[r];if(void 0!==s)return s.exports;var i=n[r]={exports:{}};return e[r].call(i.exports,i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{"use strict";var e=t(93150),n=t.n(e);const r=3===n().runtime.getManifest().manifest_version;function s(e){try{if(!document)throw new Error("No document");const n=document.head||document.documentElement;if(!n)throw new Error("No container element");const t=document.createElement("script");t.setAttribute("async","false"),t.setAttribute("type","text/javascript"),t.textContent=e,n.insertBefore(t,n.children[0]),n.removeChild(t)}catch(e){console.error("Alby: provider injection failed",e)}}function i(e){try{if(!document)throw new Error("No document");const n=document.head||document.documentElement;if(!n)throw new Error("No container element");const t=document.createElement("script");t.setAttribute("async","false"),t.setAttribute("type","text/javascript"),t.src=e,n.insertBefore(t,n.children[0]),n.removeChild(t)}catch(e){console.error("Alby: provider injection failed",e)}}!async function(){r||(s('/******/ (() => { // webpackBootstrap\n/******/ \t"use strict";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 17187:\n/***/ ((module) => {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === \'object\' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === \'function\'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === \'function\') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== \'function\') {\n    throw new TypeError(\'The "listener" argument must be of type Function. Received type \' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, \'defaultMaxListeners\', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== \'number\' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError(\'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received \' + arg + \'.\');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== \'number\' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError(\'The value of "n" is out of range. It must be a non-negative number. Received \' + n + \'.\');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === \'error\');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no \'error\' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node\'s output if this results in an unhandled exception.\n      throw er; // Unhandled \'error\' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error(\'Unhandled error.\' + (er ? \' (\' + er.message + \')\' : \'\'));\n    err.context = er;\n    throw err; // Unhandled \'error\' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === \'function\') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === "newListener"! Before\n    // adding it to the listeners, first emit "newListener".\n    if (events.newListener !== undefined) {\n      target.emit(\'newListener\', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don\'t need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === \'function\') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we\'ve already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error(\'Possible EventEmitter memory leak detected. \' +\n                          existing.length + \' \' + String(type) + \' listeners \' +\n                          \'added. Use emitter.setMaxListeners() to \' +\n                          \'increase limit\');\n      w.name = \'MaxListenersExceededWarning\';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a \'removeListener\' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit(\'removeListener\', type, list.listener || listener);\n        }\n      } else if (typeof list !== \'function\') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit(\'removeListener\', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === \'removeListener\') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners(\'removeListener\');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === \'function\') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === \'function\')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === \'function\') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === \'function\') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === \'function\') {\n        emitter.removeListener(\'error\', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== \'error\') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === \'function\') {\n    eventTargetAgnosticAddListener(emitter, \'error\', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === \'function\') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === \'function\') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError(\'The "emitter" argument must be of type EventEmitter. Received type \' + typeof emitter);\n  }\n}\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n(() => {\n\n;// CONCATENATED MODULE: ./src/common/constants.ts\n// Eventually this file might become too large\n// Could be split up into i.e.\n// constants/messages\n// constants/[...etc]\nconst ABORT_PROMPT_ERROR = "Prompt was closed";\nconst USER_REJECTED_ERROR = "User rejected";\nconst NO_KEYS_ERROR = "No keys available";\nvar CURRENCIES;\n(function(CURRENCIES) {\n    CURRENCIES["AED"] = "AED";\n    CURRENCIES["AFN"] = "AFN";\n    CURRENCIES["ALL"] = "ALL";\n    CURRENCIES["AMD"] = "AMD";\n    CURRENCIES["ANG"] = "ANG";\n    CURRENCIES["AOA"] = "AOA";\n    CURRENCIES["ARS"] = "ARS";\n    CURRENCIES["AUD"] = "AUD";\n    CURRENCIES["AWG"] = "AWG";\n    CURRENCIES["AZN"] = "AZN";\n    CURRENCIES["BAM"] = "BAM";\n    CURRENCIES["BBD"] = "BBD";\n    CURRENCIES["BDT"] = "BDT";\n    CURRENCIES["BGN"] = "BGN";\n    CURRENCIES["BHD"] = "BHD";\n    CURRENCIES["BIF"] = "BIF";\n    CURRENCIES["BMD"] = "BMD";\n    CURRENCIES["BND"] = "BND";\n    CURRENCIES["BOB"] = "BOB";\n    CURRENCIES["BRL"] = "BRL";\n    CURRENCIES["BSD"] = "BSD";\n    CURRENCIES["BTN"] = "BTN";\n    CURRENCIES["BWP"] = "BWP";\n    CURRENCIES["BZD"] = "BZD";\n    CURRENCIES["CAD"] = "CAD";\n    CURRENCIES["CDF"] = "CDF";\n    CURRENCIES["CHF"] = "CHF";\n    CURRENCIES["CNY"] = "CNY";\n    CURRENCIES["COP"] = "COP";\n    CURRENCIES["CRC"] = "CRC";\n    CURRENCIES["CUP"] = "CUP";\n    CURRENCIES["CVE"] = "CVE";\n    CURRENCIES["CZK"] = "CZK";\n    CURRENCIES["DJF"] = "DJF";\n    CURRENCIES["DKK"] = "DKK";\n    CURRENCIES["DOP"] = "DOP";\n    CURRENCIES["DZD"] = "DZD";\n    CURRENCIES["EGP"] = "EGP";\n    CURRENCIES["ERN"] = "ERN";\n    CURRENCIES["ETB"] = "ETB";\n    CURRENCIES["EUR"] = "EUR";\n    CURRENCIES["FJD"] = "FJD";\n    CURRENCIES["GBP"] = "GBP";\n    CURRENCIES["GEL"] = "GEL";\n    CURRENCIES["GHS"] = "GHS";\n    CURRENCIES["GIP"] = "GIP";\n    CURRENCIES["GMD"] = "GMD";\n    CURRENCIES["GNF"] = "GNF";\n    CURRENCIES["GTQ"] = "GTQ";\n    CURRENCIES["GYD"] = "GYD";\n    CURRENCIES["HKD"] = "HKD";\n    CURRENCIES["HNL"] = "HNL";\n    CURRENCIES["HRK"] = "HRK";\n    CURRENCIES["HTG"] = "HTG";\n    CURRENCIES["HUF"] = "HUF";\n    CURRENCIES["IDR"] = "IDR";\n    CURRENCIES["ILS"] = "ILS";\n    CURRENCIES["INR"] = "INR";\n    CURRENCIES["IQD"] = "IQD";\n    CURRENCIES["IRR"] = "IRR";\n    CURRENCIES["ISK"] = "ISK";\n    CURRENCIES["JMD"] = "JMD";\n    CURRENCIES["JOD"] = "JOD";\n    CURRENCIES["JPY"] = "JPY";\n    CURRENCIES["KES"] = "KES";\n    CURRENCIES["KGS"] = "KGS";\n    CURRENCIES["KHR"] = "KHR";\n    CURRENCIES["KMF"] = "KMF";\n    CURRENCIES["KPW"] = "KPW";\n    CURRENCIES["KRW"] = "KRW";\n    CURRENCIES["KWD"] = "KWD";\n    CURRENCIES["KYD"] = "KYD";\n    CURRENCIES["KZT"] = "KZT";\n    CURRENCIES["LAK"] = "LAK";\n    CURRENCIES["LBP"] = "LBP";\n    CURRENCIES["LKR"] = "LKR";\n    CURRENCIES["LRD"] = "LRD";\n    CURRENCIES["LSL"] = "LSL";\n    CURRENCIES["LYD"] = "LYD";\n    CURRENCIES["MAD"] = "MAD";\n    CURRENCIES["MDL"] = "MDL";\n    CURRENCIES["MGA"] = "MGA";\n    CURRENCIES["MKD"] = "MKD";\n    CURRENCIES["MMK"] = "MMK";\n    CURRENCIES["MNT"] = "MNT";\n    CURRENCIES["MOP"] = "MOP";\n    CURRENCIES["MUR"] = "MUR";\n    CURRENCIES["MVR"] = "MVR";\n    CURRENCIES["MWK"] = "MWK";\n    CURRENCIES["MXN"] = "MXN";\n    CURRENCIES["MYR"] = "MYR";\n    CURRENCIES["NAD"] = "NAD";\n    CURRENCIES["NGN"] = "NGN";\n    CURRENCIES["NIO"] = "NIO";\n    CURRENCIES["NOK"] = "NOK";\n    CURRENCIES["NPR"] = "NPR";\n    CURRENCIES["NZD"] = "NZD";\n    CURRENCIES["OMR"] = "OMR";\n    CURRENCIES["PAB"] = "PAB";\n    CURRENCIES["PEN"] = "PEN";\n    CURRENCIES["PGK"] = "PGK";\n    CURRENCIES["PHP"] = "PHP";\n    CURRENCIES["PKR"] = "PKR";\n    CURRENCIES["PLN"] = "PLN";\n    CURRENCIES["PYG"] = "PYG";\n    CURRENCIES["QAR"] = "QAR";\n    CURRENCIES["RON"] = "RON";\n    CURRENCIES["RSD"] = "RSD";\n    CURRENCIES["RUB"] = "RUB";\n    CURRENCIES["RWF"] = "RWF";\n    CURRENCIES["SAR"] = "SAR";\n    CURRENCIES["SBD"] = "SBD";\n    CURRENCIES["SCR"] = "SCR";\n    CURRENCIES["SDG"] = "SDG";\n    CURRENCIES["SEK"] = "SEK";\n    CURRENCIES["SGD"] = "SGD";\n    CURRENCIES["SHP"] = "SHP";\n    CURRENCIES["SLL"] = "SLL";\n    CURRENCIES["SOS"] = "SOS";\n    CURRENCIES["SRD"] = "SRD";\n    CURRENCIES["SVC"] = "SVC";\n    CURRENCIES["SYP"] = "SYP";\n    CURRENCIES["SZL"] = "SZL";\n    CURRENCIES["THB"] = "THB";\n    CURRENCIES["TMT"] = "TMT";\n    CURRENCIES["TND"] = "TND";\n    CURRENCIES["TOP"] = "TOP";\n    CURRENCIES["TRY"] = "TRY";\n    CURRENCIES["TTD"] = "TTD";\n    CURRENCIES["TWD"] = "TWD";\n    CURRENCIES["TZS"] = "TZS";\n    CURRENCIES["UAH"] = "UAH";\n    CURRENCIES["UGX"] = "UGX";\n    CURRENCIES["USD"] = "USD";\n    CURRENCIES["UYU"] = "UYU";\n    CURRENCIES["UZS"] = "UZS";\n    CURRENCIES["VND"] = "VND";\n    CURRENCIES["VUV"] = "VUV";\n    CURRENCIES["WST"] = "WST";\n    CURRENCIES["XAF"] = "XAF";\n    CURRENCIES["XCD"] = "XCD";\n    CURRENCIES["XOF"] = "XOF";\n    CURRENCIES["XPF"] = "XPF";\n    CURRENCIES["ZAR"] = "ZAR";\n    CURRENCIES["ZMW"] = "ZMW";\n    CURRENCIES["ZWL"] = "ZWL";\n})(CURRENCIES || (CURRENCIES = {}));\nvar TIPS;\n(function(TIPS) {\n    TIPS["TOP_UP_WALLET"] = "top_up_wallet";\n    TIPS["DEMO"] = "demo";\n    TIPS["MNEMONIC"] = "mnemonic";\n})(TIPS || (TIPS = {}));\n\n// EXTERNAL MODULE: ./node_modules/events/events.js\nvar events = __webpack_require__(17187);\n;// CONCATENATED MODULE: ./src/extension/providers/promiseQueue.ts\nclass PromiseQueue {\n    queue = Promise.resolve(true);\n    add(operation) {\n        return new Promise((resolve, reject)=>{\n            this.queue = this.queue.then(operation).then(resolve).catch(reject);\n        });\n    }\n}\n\n;// CONCATENATED MODULE: ./src/extension/providers/postMessage.ts\n\n// global queue object\nconst queue = new PromiseQueue();\nfunction postMessage(scope, action, args) {\n    return queue.add(()=>new Promise((resolve, reject)=>{\n            const id = Math.random().toString().slice(4);\n            // post the request to the content script. from there it gets passed to the background script and back\n            // in page script can not directly connect to the background script\n            window.postMessage({\n                id: id,\n                application: "LBE",\n                prompt: true,\n                action: `${scope}/${action}`,\n                scope: scope,\n                args\n            }, window.location.origin);\n            function handleWindowMessage(messageEvent) {\n                // check if it is a relevant message\n                // there are some other events happening\n                if (messageEvent.origin !== window.location.origin || !messageEvent.data || !messageEvent.data.response || messageEvent.data.application !== "LBE" || messageEvent.data.scope !== scope || messageEvent.data.id !== id) {\n                    return;\n                }\n                if (messageEvent.data.data.error) {\n                    reject(new Error(messageEvent.data.data.error));\n                } else {\n                    // 1. data: the message data\n                    // 2. data: the data passed as data to the message\n                    // 3. data: the actual response data\n                    resolve(messageEvent.data.data.data);\n                }\n                // For some reason must happen only at the end of this function\n                window.removeEventListener("message", handleWindowMessage);\n            }\n            window.addEventListener("message", handleWindowMessage);\n        }));\n}\n\n;// CONCATENATED MODULE: ./src/extension/providers/providerBase.ts\n\n\nclass ProviderBase {\n    enabled;\n    _eventEmitter;\n    _scope;\n    constructor(scope){\n        this.enabled = false;\n        this._eventEmitter = new events.EventEmitter();\n        this._scope = scope;\n    }\n    _checkEnabled(methodName) {\n        if (!this.enabled) {\n            throw new Error(`Provider must be enabled before calling ${methodName}`);\n        }\n    }\n    async enable() {\n        if (this.enabled) {\n            return;\n        }\n        const result = await this.execute("enable");\n        if (typeof result.enabled === "boolean") {\n            this.enabled = result.enabled;\n        }\n    }\n    on(...args) {\n        this._checkEnabled("on");\n        this._eventEmitter.on(...args);\n    }\n    off(...args) {\n        this._checkEnabled("off");\n        this._eventEmitter.off(...args);\n    }\n    emit(...args) {\n        this._eventEmitter.emit(...args);\n    }\n    // NOTE: new call `action`s must be specified also in the content script\n    execute(action, args) {\n        return postMessage(this._scope, action, args);\n    }\n}\n\n;// CONCATENATED MODULE: ./src/extension/providers/alby/index.ts\n\nclass AlbyProvider extends ProviderBase {\n    constructor(){\n        super("alby");\n    }\n    /**\n   * Adds a wallet to the user\'s Alby extension\n   *\n   * @param name The name of the account\n   * @param connector The connector to use\n   * @param config The config to pass to the connector\n   * @returns Nothing, throws if user rejects\n   */ addAccount(params) {\n        this._checkEnabled("addAccount");\n        return this.execute("addAccount", {\n            name: params.name,\n            connector: params.connector,\n            config: params.config\n        });\n    }\n}\n\n;// CONCATENATED MODULE: ./src/extension/providers/liquid/index.ts\n\nclass LiquidProvider extends ProviderBase {\n    constructor(){\n        super("liquid");\n    }\n    async getAddress() {\n        this._checkEnabled("getAddress");\n        return await this.execute("getAddressOrPrompt");\n    }\n    async signPset(pset) {\n        this._checkEnabled("signPset");\n        return this.execute("signPsetWithPrompt", {\n            pset\n        });\n    }\n}\n\n;// CONCATENATED MODULE: ./src/extension/providers/nostr/index.ts\n\nclass NostrProvider extends ProviderBase {\n    nip04 = new Nip04(this);\n    constructor(){\n        super("nostr");\n    }\n    async getPublicKey() {\n        await this.enable();\n        return await this.execute("getPublicKeyOrPrompt");\n    }\n    async signEvent(event) {\n        await this.enable();\n        return this.execute("signEventOrPrompt", {\n            event\n        });\n    }\n    async signSchnorr(sigHash) {\n        await this.enable();\n        return this.execute("signSchnorrOrPrompt", {\n            sigHash\n        });\n    }\n    async getRelays() {\n        await this.enable();\n        return this.execute("getRelays");\n    }\n    //override method from base class, we don\'t want to throw error if not enabled\n    async on(...args) {\n        await this.enable();\n        super.on(...args);\n    }\n    async off(...args) {\n        await this.enable();\n        super.off(...args);\n    }\n}\nclass Nip04 {\n    provider;\n    constructor(provider){\n        this.provider = provider;\n    }\n    async encrypt(peer, plaintext) {\n        await this.provider.enable();\n        return this.provider.execute("encryptOrPrompt", {\n            peer,\n            plaintext\n        });\n    }\n    async decrypt(peer, ciphertext) {\n        await this.provider.enable();\n        return this.provider.execute("decryptOrPrompt", {\n            peer,\n            ciphertext\n        });\n    }\n}\n\n;// CONCATENATED MODULE: ./src/extension/providers/webbtc/index.ts\n\nclass WebBTCProvider extends ProviderBase {\n    isEnabled;\n    executing;\n    constructor(){\n        super("webbtc");\n        this.isEnabled = false;\n        this.executing = false;\n    }\n    getInfo() {\n        this._checkEnabled("getInfo");\n        return this.execute("getInfo");\n    }\n    sendTransaction(address, amount) {\n        this._checkEnabled("sendTransaction");\n        throw new Error("Alby does not support `sendTransaction`");\n    }\n    getAddress() {\n        this._checkEnabled("getAddress");\n        return this.execute("getAddressOrPrompt", {});\n    }\n    request(method, params) {\n        this._checkEnabled("request");\n        throw new Error("Alby does not support `request`");\n    }\n}\n\n;// CONCATENATED MODULE: ./src/extension/providers/webln/index.ts\n\nclass WebLNProvider extends ProviderBase {\n    constructor(){\n        super("webln");\n    }\n    getInfo() {\n        this._checkEnabled("getInfo");\n        return this.execute("getInfo");\n    }\n    lnurl(lnurlEncoded) {\n        this._checkEnabled("lnurl");\n        return this.execute("lnurl", {\n            lnurlEncoded\n        });\n    }\n    sendPayment(paymentRequest) {\n        this._checkEnabled("sendPayment");\n        return this.execute("sendPaymentOrPrompt", {\n            paymentRequest\n        });\n    }\n    keysend(args) {\n        this._checkEnabled("keysend");\n        return this.execute("keysendOrPrompt", args);\n    }\n    makeInvoice(args) {\n        this._checkEnabled("makeInvoice");\n        if (typeof args !== "object") {\n            args = {\n                amount: args\n            };\n        }\n        return this.execute("makeInvoice", args);\n    }\n    signMessage(message) {\n        this._checkEnabled("signMessage");\n        return this.execute("signMessageOrPrompt", {\n            message\n        });\n    }\n    verifyMessage(signature, message) {\n        this._checkEnabled("verifyMessage");\n        throw new Error("Alby does not support `verifyMessage`");\n    }\n    getBalance() {\n        this._checkEnabled("getBalance");\n        return this.execute("getBalanceOrPrompt");\n    }\n    request(method, params) {\n        this._checkEnabled("request");\n        return this.execute("request", {\n            method,\n            params\n        });\n    }\n}\n\n;// CONCATENATED MODULE: ./src/extension/shouldInjectBrowserChecks.js\n// Checks the doctype of the current document if it exists\nfunction doctypeCheck() {\n    if (window && window.document && window.document.doctype) {\n        return window.document.doctype.name === "html";\n    } else {\n        return true;\n    }\n}\n// Returns whether or not the extension (suffix) of the current document is prohibited\nfunction suffixCheck() {\n    const prohibitedTypes = [\n        /\\.xml$/,\n        /\\.pdf$/\n    ];\n    const currentUrl = window.location.pathname;\n    for (const type of prohibitedTypes){\n        if (type.test(currentUrl)) {\n            return false;\n        }\n    }\n    return true;\n}\n// Checks the documentElement of the current document\nfunction documentElementCheck() {\n    // todo: correct?\n    if (!document || !document.documentElement) {\n        return false;\n    }\n    const docNode = document.documentElement.nodeName;\n    if (docNode) {\n        return docNode.toLowerCase() === "html";\n    }\n    return true;\n}\n\n;// CONCATENATED MODULE: ./src/extension/inpage-script/shouldInject.js\n\nfunction shouldInjectInpage() {\n    const isHTML = doctypeCheck();\n    const noProhibitedType = suffixCheck();\n    const hasDocumentElement = documentElementCheck();\n    const injectedBefore = window.webln !== undefined;\n    return isHTML && noProhibitedType && hasDocumentElement && !injectedBefore;\n}\n\n;// CONCATENATED MODULE: ./src/extension/inpage-script/index.js\n\n\n\n\n\n\n\nfunction init() {\n    const inject = shouldInjectInpage();\n    if (!inject) return;\n    window.liquid = new LiquidProvider();\n    window.alby = new AlbyProvider();\n    window.nostr = new NostrProvider();\n    window.webbtc = new WebBTCProvider();\n    window.webln = new WebLNProvider();\n    const readyEvent = new Event("webln:ready");\n    window.dispatchEvent(readyEvent);\n    registerLightningLinkClickHandler();\n    // Listen for webln events from the extension\n    // emit events to the websites\n    window.addEventListener("message", (event)=>{\n        if (event.source === window && event.data.action === "accountChanged") {\n            eventEmitter(event.data.action, event.data.scope);\n        }\n    });\n}\nfunction registerLightningLinkClickHandler() {\n    // Intercept any `lightning:` requests\n    window.addEventListener("click", async (ev)=>{\n        // Use composedPath() for detecting links inside a Shadow DOM\n        // https://developer.mozilla.org/en-US/docs/Web/API/Event/composedPath\n        const target = ev.composedPath()[0];\n        if (!target || !target.closest) {\n            return;\n        }\n        const lightningLink = target.closest(\'[href^="lightning:" i]\');\n        const lnurlLink = target.closest(\'[href^="lnurl" i]\');\n        const bitcoinLinkWithLighting = target.closest(\'[href*="lightning=ln" i]\'); // links with a lightning parameter and a value that starts with ln: payment requests (lnbc...) or lnurl (lnurl*)\n        let href;\n        let paymentRequest;\n        let lnurl;\n        let link; // used to dispatch a succcess event\n        if (!lightningLink && !bitcoinLinkWithLighting && !lnurlLink) {\n            return;\n        }\n        ev.preventDefault();\n        if (lightningLink) {\n            href = lightningLink.getAttribute("href").toLowerCase();\n            paymentRequest = href.replace("lightning:", "");\n            link = lightningLink;\n        } else if (bitcoinLinkWithLighting) {\n            href = bitcoinLinkWithLighting.getAttribute("href").toLowerCase();\n            link = bitcoinLinkWithLighting;\n            const url = new URL(href);\n            const query = new URLSearchParams(url.search);\n            paymentRequest = query.get("lightning");\n        } else if (lnurlLink) {\n            href = lnurlLink.getAttribute("href").toLowerCase();\n            link = lnurlLink;\n            lnurl = href.replace(/^lnurl[pwc]:/i, "");\n        }\n        // if we did not find any paymentRequest and no LNURL we give up and return\n        if (!paymentRequest && !lnurl) {\n            return;\n        }\n        // it could be it is a LNURL behind a lightning: link\n        if (paymentRequest && paymentRequest.startsWith("lnurl")) {\n            lnurl = paymentRequest.replace(/^lnurl[pwc]:/i, ""); // replace potential scheme. the different lnurl types are handled in the lnurl action (by checking the type in the LNURL response)\n        }\n        // it could be a lightning address behind a lightning: link\n        if (paymentRequest && paymentRequest.match(/(\\S+@\\S+)/)) {\n            lnurl = paymentRequest.match(/(\\S+@\\S+)/)[1];\n        }\n        try {\n            await window.webln.enable();\n        } catch (e) {\n            console.error(e);\n        }\n        if (lnurl) {\n            try {\n                const response = await window.webln.lnurl(lnurl);\n                const responseEvent = new CustomEvent("lightning:success", {\n                    bubbles: true,\n                    detail: {\n                        lnurl,\n                        response\n                    }\n                });\n                link.dispatchEvent(responseEvent);\n            } catch (e) {\n                console.error(e);\n                if (![\n                    ABORT_PROMPT_ERROR,\n                    USER_REJECTED_ERROR\n                ].includes(e.message)) {\n                    alert(`Error: ${e.message}`);\n                }\n            }\n        }\n        try {\n            const response = await window.webln.sendPayment(paymentRequest);\n            const responseEvent = new CustomEvent("lightning:success", {\n                bubbles: true,\n                detail: {\n                    paymentRequest,\n                    response\n                }\n            });\n            link.dispatchEvent(responseEvent);\n        } catch (e) {\n            console.error(e);\n            if (![\n                ABORT_PROMPT_ERROR,\n                USER_REJECTED_ERROR\n            ].includes(e.message)) {\n                alert(`Error: ${e.message}`);\n            }\n        }\n    }, {\n        capture: true\n    });\n}\nfunction eventEmitter(action, scope) {\n    if (window[scope] && window[scope].emit) {\n        window[scope].emit(action);\n    }\n}\ninit();\n\n})();\n\n/******/ })()\n;'),i(n().runtime.getURL("js/inpageScript.bundle.js")))}()})()})();