#!/usr/bin/env node
/**
 * @file deploys the smart contracts
 */

const { compile, deploy } = require('../test/helpers')
const program = require('commander')
const { writeFileSync } = require('fs')
const { Web3 } = require('web3')

program
  .name('deploy')
  .description('deploys smart contracts to the appropriate network')
  .option(
    '-k, --key <key>',
    'the private key for the wallet'
  )
  .option(
    '-u, --url <url>',
    'the URL to the EVM',
    process.env.PORTAL_ETHEREUM_URL
  )
  .option(
    '-f, --file <file>',
    'the output JSON file',
    process.env.PORTAL_ETHEREUM_CONTRACTS
  )
  .action(async opts => {
    try {
      // initialize web3
      const web3 = new Web3(opts.url)

      // ensure an account is available for deployment
      const accounts = await web3.eth.getAccounts()
      if (accounts.length === 0) {
        if (opts.key == null) {
          throw Error('use --key to provide an account for deployment!')
        }
        const key = opts.key.startsWith('0x') ? opts.key : `0x${opts.key}`
        web3.eth.accounts.wallet.add(key)
      }

      // compile and deploy the contracts
      const compiled = await compile()
      const contracts = await deploy(compiled, web3)
      writeFileSync(opts.file, JSON.stringify(contracts, null, 2))

      // clean up
      await web3.provider.disconnect()
    } catch (err) {
      console.error(err)
      process.exit(1)
    }
  })
  .parse()
